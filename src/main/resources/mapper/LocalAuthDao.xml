<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.o2oadmin.dao.LocalAuthDao">

    <resultMap type="LocalAuth" id="LocalAuthResult">
        <result property="localAuthId"    column="local_auth_id"    />
        <result property="userId"    column="user_id"    />
        <result property="username"    column="username"    />
        <result property="password"    column="password"    />
        <result property="createTime"    column="create_time"    />
        <result property="lastEditTime"    column="last_edit_time"    />
    </resultMap>

    <sql id="selectLocalAuthVo">
        select local_auth_id, user_id, username, password, create_time, last_edit_time from tb_local_auth
    </sql>

    <select id="selectLocalAuthList" parameterType="LocalAuth" resultMap="LocalAuthResult">
        <include refid="selectLocalAuthVo"/>
        <where>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="username != null  and username != ''"> and username like concat('%', #{username}, '%')</if>
        </where>
        order by user_Id desc
    </select>

    <select id="selectLocalAuthByLocalAuthId" parameterType="Long" resultMap="LocalAuthResult">
        <include refid="selectLocalAuthVo"/>
        where local_auth_id = #{localAuthId}
    </select>
    <update id="updateLocalAuth" parameterType="LocalAuth">
        update tb_local_auth
        <trim prefix="SET" suffixOverrides=",">
<!--            <if test="userId != null">user_id = #{userId},</if>-->
<!--            <if test="username != null and username != ''">username = #{username},</if>-->
            <if test="password != null and password != ''">password = #{password},</if>
<!--            <if test="createTime != null">create_time = #{createTime},</if>-->
            <if test="lastEditTime != null">last_edit_time = #{lastEditTime},</if>
        </trim>
        where local_auth_id = #{localAuthId}
    </update>
    <delete id="deleteLocalAuthByUserId" parameterType="Long">
        delete from tb_local_auth where user_id = #{userId}
    </delete>

    <delete id="deleteLocalAuthByUserIds" parameterType="String">
        delete from tb_local_auth where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>
</mapper>